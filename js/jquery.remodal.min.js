;(function (jQuery) {"use strict";/*** Remodal settings*/var pluginName = "remodal",defaults = {hashTracking: true};/*** Special plugin object for instances.* @type {Object}*/jQuery[pluginName] = {lookup: []};/*** Current modal*/var current;/*** Get transition duration in ms* @return {Number}*/var getTransitionDuration = function (jQueryelem) {var duration = jQueryelem.css('transition-duration') ||jQueryelem.css('-webkit-transition-duration') ||jQueryelem.css('-moz-transition-duration') ||jQueryelem.css('-o-transition-duration') ||jQueryelem.css('-ms-transition-duration') ||0;var delay = jQueryelem.css('transition-delay') ||jQueryelem.css('-webkit-transition-delay') ||jQueryelem.css('-moz-transition-delay') ||jQueryelem.css('-o-transition-delay') ||jQueryelem.css('-ms-transition-delay') ||0;return (parseFloat(duration) + parseFloat(delay)) * 1000;};/*** Get a scrollbar width* @return {Number}*/var getScrollbarWidth = function () {var outer = document.createElement("div");outer.style.visibility = "hidden";outer.style.width = "100px";document.body.appendChild(outer);var widthNoScroll = outer.offsetWidth;// force scrollbarsouter.style.overflow = "scroll";// add innerdivvar inner = document.createElement("div");inner.style.width = "100%";outer.appendChild(inner);var widthWithScroll = inner.offsetWidth;// remove divsouter.parentNode.removeChild(outer);return widthNoScroll - widthWithScroll;};/*** Lock screen*/var lockScreen = function () {jQuery("html, body").addClass(pluginName + "_lock");jQuery(document.body).css("padding-right", "+=" + getScrollbarWidth());};/*** Unlock screen*/var unlockScreen = function () {jQuery("html, body").removeClass(pluginName + "_lock");jQuery(document.body).css("padding-right", "-=" + getScrollbarWidth());};/*** Remodal constructor*/function Remodal(modal, options) {this.settings = jQuery.extend({}, defaults, options);this.modal = modal;this.buildDOM();this.addEventListeners();this.index = jQuery[pluginName].lookup.push(this) - 1;this.busy = false;}/*** Build required DOM*/Remodal.prototype.buildDOM = function () {this.body = jQuery(document.body);this.bg = jQuery("." + pluginName + "-bg");this.modalClose = jQuery("<a href='#'>").addClass(pluginName + "-close");this.overlay = jQuery("<div>").addClass(pluginName + "-overlay");if (!this.modal.hasClass(pluginName)) {this.modal.addClass(pluginName);}this.modal.css("visibility", "visible");this.modal.append(this.modalClose);this.overlay.append(this.modal);this.body.append(this.overlay);this.confirm = this.modal.find("." + pluginName + "-confirm");this.cancel = this.modal.find("." + pluginName + "-cancel");var tdOverlay = getTransitionDuration(this.overlay),tdModal = getTransitionDuration(this.modal),tdBg = getTransitionDuration(this.bg);this.td = tdModal > tdOverlay ? tdModal : tdOverlay;this.td = tdBg > this.td ? tdBg : this.td;};/*** Add event listeners to the current modal window*/Remodal.prototype.addEventListeners = function () {this.modalClose.bind("click." + pluginName, function (e) {e.preventDefault();this.close();}.bind(this));this.cancel.bind("click." + pluginName, function (e) {e.preventDefault();this.modal.trigger("cancel");this.close();}.bind(this));this.confirm.bind("click." + pluginName, function (e) {e.preventDefault();this.modal.trigger("confirm");this.close();}.bind(this));jQuery(document).bind('keyup.' + pluginName, function (e) {if (e.keyCode === 27) {this.close();}}.bind(this));this.overlay.bind("click." + pluginName, function (e) {var jQuerytarget = jQuery(e.target);if (!jQuerytarget.hasClass(pluginName + "-overlay")) {return;}this.close();}.bind(this));};/*** Open modal window*/Remodal.prototype.open = function () {// check if animation is completeif (this.busy) {return;}this.busy = true;this.modal.trigger("open");var id = this.modal.attr("data-" + pluginName + "-id");if (id && this.settings.hashTracking) {location.hash = id;}if (current && current !== this) {current.overlay.hide();current.body.removeClass(pluginName + "_active");}current = this;lockScreen();this.overlay.show();setTimeout(function () {this.body.addClass(pluginName + "_active");setTimeout(function () {this.busy = false;this.modal.trigger("opened");}.bind(this), this.td + 50);}.bind(this), 25);};/*** Close modal window*/Remodal.prototype.close = function () {// check if animation is completeif (this.busy) {return;}this.busy = true;this.modal.trigger("close");if (this.settings.hashTracking &&this.modal.attr("data-" + pluginName + "-id") === location.hash.substr(1)) {// save current scroll positionlocation.hash = "";}this.body.removeClass(pluginName + "_active");setTimeout(function () {this.overlay.hide();unlockScreen();this.busy = false;this.modal.trigger("closed");}.bind(this), this.td + 50);};if (jQuery) {jQuery["fn"][pluginName] = function (opts) {var instance;this["each"](function (i, e) {var jQuerye = jQuery(e);if (!jQuerye.data(pluginName)) {instance = new Remodal(jQuerye, opts);jQuerye.data(pluginName, instance.index);if (instance.settings.hashTracking &&jQuerye.attr("data-" + pluginName + "-id") === location.hash.substr(1)) {instance.open();}}});return instance;};}/*** data-remodal-target opens a modal window with a special id without hash change.*/jQuery(document).on("click", "[data-" + pluginName + "-target]", function (e) {e.preventDefault();var elem = e.currentTarget,id = elem.getAttribute("data-" + pluginName + "-target"),jQuerytarget = jQuery("[data-" + pluginName + "-id=" + id + "]");jQuery[pluginName].lookup[jQuerytarget.data(pluginName)].open();});/*** Auto initialization of modal windows.* They should have the 'data-remodal' attribute.* Also you can pass params into the modal throw the data-remodal-options attribute.* data-remodal-options must be a JSON string without brackets.*/jQuery(document).find("." + pluginName).each(function (i, container) {var jQuerycontainer = jQuery(container),options = jQuerycontainer.data(pluginName + "-options");if (!options) {options = {};}jQuerycontainer[pluginName](options);});/*** Hashchange handling to show a modal with a special id.*/var hashHandler = function (e, closeOnEmptyHash) {var id = location.hash.replace("#", "");if (typeof closeOnEmptyHash === "undefined") {closeOnEmptyHash = true;}if (!id) {if (closeOnEmptyHash) {// check if we have currently opened modal and animation is completeif (current && !current.busy && current.settings.hashTracking) {current.close();}}} else {var jQueryelem = jQuery("[data-" + pluginName + "-id=" + id + "]");if (jQueryelem.length) {var instance = jQuery[pluginName].lookup[jQueryelem.data(pluginName)];if (instance && instance.settings.hashTracking) {instance.open();}}}};jQuery(window).bind("hashchange." + pluginName, hashHandler);})(window["jQuery"] || window["Zepto"]);